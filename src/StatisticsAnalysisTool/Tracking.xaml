<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:notification="clr-namespace:StatisticsAnalysisTool.Network.Notification"
                    xmlns:com="clr-namespace:StatisticsAnalysisTool.Common"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:networkModel="clr-namespace:StatisticsAnalysisTool.Models.NetworkModel"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/"
                    xmlns:models="clr-namespace:StatisticsAnalysisTool.Models"
                    xmlns:enumerations="clr-namespace:StatisticsAnalysisTool.Enumerations"
                    xmlns:converters="clr-namespace:StatisticsAnalysisTool.Common.Converters"
                    mc:Ignorable="d">

    <converters:TrackerIconConverter x:Key="Tracker.Icon.Converter" />

    <Style x:Key="LineFragmentImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="OperatorTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
        <Setter Property="Text" Value="+ " />
        <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Static enumerations:AttributeStatOperator.Minus}">
                <Setter Property="Text" Value="- " />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Tracker.Fraction.Coin.Icon" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Unknown}">
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Martlock}">
                <Setter Property="Source" Value="Resources/factioncoin_martlock.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Lymhurst}">
                <Setter Property="Source" Value="Resources/factioncoin_lymhurst.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Bridgewatch}">
                <Setter Property="Source" Value="Resources/factioncoin_bridgewatch.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.FortSterling}">
                <Setter Property="Source" Value="Resources/factioncoin_fortsterling.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Thetford}">
                <Setter Property="Source" Value="Resources/factioncoin_thetford.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Caerleon}">
                <Setter Property="Source" Value="Resources/factioncoin_caerleon.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Tracker.Fraction.Flag.Icon" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Unknown}">
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Martlock}">
                <Setter Property="Source" Value="Resources/factionflag_martlock.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Lymhurst}">
                <Setter Property="Source" Value="Resources/factionflag_lymhurst.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Bridgewatch}">
                <Setter Property="Source" Value="Resources/factionflag_bridgewatch.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.FortSterling}">
                <Setter Property="Source" Value="Resources/factionflag_fortsterling.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Thetford}">
                <Setter Property="Source" Value="Resources/factionflag_thetford.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CityFaction}" Value="{x:Static enumerations:CityFaction.Caerleon}">
                <Setter Property="Source" Value="Resources/factionflag_caerleon.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Tracker.Icon.SeasonPoints" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Source" Value="Resources/icon_daily_season_points.png"/>
    </Style>

    <DataTemplate DataType="{x:Type notification:TrackingNotification}">
        <Grid Visibility="{Binding Visibility}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Margin="3" Text="{Binding DateTime, StringFormat=[hh:mm:ss]}" Foreground="{StaticResource Solid.Color.Text.Normal}" />
            <ItemsControl Grid.Column="1" Margin="3" ItemsSource="{Binding Fragments}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:TextFragment}">
        <TextBlock Text="{Binding Text, StringFormat='{}{0} '}" TextWrapping="Wrap" Foreground="{StaticResource Solid.Color.Text.Normal}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:FameNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Source="Resources/fame.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding TotalGainedFame, StringFormat='{} {0:N0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding FameText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Foreground.First}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding PvpPveType}" Value="{x:Static enumerations:PvpPveType.Pve}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PvpPveType}" Value="{x:Static enumerations:PvpPveType.Pvp}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pvp}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="(" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <Image Source="Resources/zone.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding Zone, StringFormat='{} {0:N0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <Image Source="Resources/crown.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding Premium, StringFormat='{}{0:N0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}" />

            <Image Source="Resources/satchel.png" Style="{StaticResource LineFragmentImageStyle}" />
            
            <TextBlock Text="{Binding Satchel, StringFormat='{}{0:N0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}" />

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding BonusFactorInPercent, StringFormat='{} +{0}%'}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Foreground.First}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBonusFactorActive}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsBonusFactorActive}" Value="false">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <TextBlock Text="{Binding EndText, StringFormat='{}) {0}'}" Foreground="{StaticResource Solid.Color.Text.Normal}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:SilverNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Source="Resources/silver.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding TotalGainedSilver, StringFormat='{} {0:N2} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding SilverText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="(" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <Image Source="Resources/zone.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding ClusterBonus, StringFormat='{}{0:N2} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <Image Source="Resources/crown.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding PremiumBonus, StringFormat='{}{0:N2}  '}" Foreground="{StaticResource Solid.Color.Text.Normal}" />

            <TextBlock Text="-" Foreground="{StaticResource Solid.Color.Text.Normal}" />
            <Image Source="Resources/shields.png" Style="{StaticResource LineFragmentImageStyle}" />
            <TextBlock Text="{Binding ClusterTax, StringFormat='{}{0:N2}) '}" Foreground="{StaticResource Solid.Color.Text.Normal}" />


            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource Solid.Color.Text.Normal}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:FactionPointsNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}"/>
            <TextBlock Text="{Binding GainedFractionPoints, StringFormat='{} {0:N0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding ValueText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource Solid.Color.Text.Normal}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:FactionFlagPointsNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Style="{StaticResource Tracker.Fraction.Flag.Icon}"/>
            <TextBlock Text="{Binding GainedFractionPoints, StringFormat='{} {0:N2} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding ValueText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource Solid.Color.Text.Normal}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:SeasonPointsNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding StartText, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock DataContext="{Binding Operator}" Style="{StaticResource OperatorTextBlockStyle}" />

            <Image Style="{StaticResource Tracker.Icon.SeasonPoints}"/>
            <TextBlock Text="{Binding GainedSeasonPoints, StringFormat='{} {0:N0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding ValueText, StringFormat='{} {0} '}"/>
                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.Color.Pve}" />
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Text="{Binding EndText, StringFormat='{}{0}'}" Foreground="{StaticResource Solid.Color.Text.Normal}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:CombatNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding CauserName, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock Text="{Binding Damage, IsAsync=True, StringFormat='{}{0:N0} '}" Foreground="{StaticResource SolidColorBrush.Blue.2}"/>
            <TextBlock Text="{Binding TargetName, IsAsync=True, StringFormat='{}{0}'}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type notification:OtherGrabbedLootNotificationFragment}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Looter, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Blue.3}"/>
            <TextBlock Text="{Binding LootedTranslation, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock Text="{Binding Quantity, IsAsync=True, StringFormat='{}{0}x '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <Image Source="{Binding Icon, IsAsync=True}" Width="25" Height="25" Stretch="Fill" />
            <TextBlock Text="{Binding LocalizedName, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>

            <TextBlock Text="{Binding FromTranslation, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
            <TextBlock Text="{Binding LootedPlayer, IsAsync=True, StringFormat='{}{0} '}" Foreground="{StaticResource SolidColorBrush.Blue.3}"/>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="DungeonNotificationFragment.Faction" TargetType="StackPanel">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Unknown}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/faction_unknown_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Heretic}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/faction_heretic_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Undead}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/faction_undead_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Keeper}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/faction_keeper_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.40"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Morgana}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/faction_morgana_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Avalon}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/faction_avalon_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.HellGate}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/hellgate_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Faction, IsAsync=True}" Value="{x:Static enumerations:Faction.Corrupted}">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush Stretch="None" ImageSource="Resources/corrupted_banner.png" AlignmentY="Center" AlignmentX="Left" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestFame" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestFame}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestFame}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestReSpec" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestReSpec}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestReSpec}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestSilver" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestSilver}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestSilver}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestFamePerHour" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestFamePerHour}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestFamePerHour}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestFactionFlags" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestFactionFlags}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestFactionFlags}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestFactionFlagsPerHour" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestFactionFlagsPerHour}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestFactionFlagsPerHour}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestFactionCoins" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestFactionCoins}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestFactionCoins}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestFactionCoinsPerHour" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestFactionCoinsPerHour}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestFactionCoinsPerHour}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestReSpecPerHour" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestReSpecPerHour}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestReSpecPerHour}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.BestSilverPerHour" TargetType="Label">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBestSilverPerHour}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsBestSilverPerHour}" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.MainMapName" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
        <!--<Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Blue.2}"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 -2 0 0" />
    </Style>

    <Style x:Key="DungeonNotificationFragment.Image.Skull" TargetType="Image">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Source" Value="Resources/skull.png" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DiedInDungeon, IsAsync=True, FallbackValue=Hidden}" Value="false">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DiedInDungeon, IsAsync=True, FallbackValue=Hidden}" Value="true">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DungeonNotificationFragment.Grid.DungeonMode" TargetType="Grid">
        <Setter Property="Width" Value="5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Expedition}">
                <Setter Property="ToolTip" Value="{Binding TranslationExpedition, IsAsync=True}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Dungeon.Mode.Expedition.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Dungeon.Mode.Expedition.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.HellGate}">
                <Setter Property="ToolTip" Value="{Binding TranslationSolo, IsAsync=True}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Dungeon.Mode.HellGate.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Dungeon.Mode.HellGate.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Corrupted}">
                <Setter Property="ToolTip" Value="{Binding TranslationSolo, IsAsync=True}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Dungeon.Mode.Corrupted.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Dungeon.Mode.Corrupted.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Solo}">
                <Setter Property="ToolTip" Value="{Binding TranslationSolo, IsAsync=True}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Dungeon.Mode.Solo.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Dungeon.Mode.Solo.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Standard}">
                <Setter Property="ToolTip" Value="{Binding TranslationStandard, IsAsync=True}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Dungeon.Mode.Standard.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Dungeon.Mode.Standard.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Avalon}">
                <Setter Property="ToolTip" Value="{Binding TranslationAvalon, IsAsync=True}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Dungeon.Mode.Avalon.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Dungeon.Mode.Avalon.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Unknown}">
                <Setter Property="ToolTip" Value="{Binding TranslationUnknown}"></Setter>
                <Setter Property="Background" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Unknown}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DungeonNotificationFragment.Label.DungeonMode" TargetType="Label">
        <Setter Property="Width" Value="5"/>
        <Setter Property="MinWidth" Value="31"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="ToolTip" Value="{Binding Tier}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Expedition}">
                <Setter Property="ToolTip" Value="{Binding TranslationExpedition, IsAsync=True}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Expedition.1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.HellGate}">
                <Setter Property="ToolTip" Value="{Binding TranslationSolo, IsAsync=True}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.HellGate.1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Corrupted}">
                <Setter Property="ToolTip" Value="{Binding TranslationSolo, IsAsync=True}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Corrupted.1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Solo}">
                <Setter Property="ToolTip" Value="{Binding TranslationSolo, IsAsync=True}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Solo.1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Standard}">
                <Setter Property="ToolTip" Value="{Binding TranslationStandard, IsAsync=True}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Standard.1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Avalon}">
                <Setter Property="ToolTip" Value="{Binding TranslationAvalon, IsAsync=True}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Avalon.1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Mode, IsAsync=True}" Value="{x:Static enumerations:DungeonMode.Unknown}">
                <Setter Property="ToolTip" Value="{Binding TranslationUnknown}"/>
                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Dungeon.Mode.Unknown}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate DataType="{x:Type notification:DungeonNotificationFragment}">
        <Grid Height="72" Margin="0 1 0 1" Visibility="{Binding Visibility}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:DungeonStatus.Active}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="{StaticResource Background.Second}" Offset="0.0"/>
                                        <GradientStop Color="{StaticResource Color.Blue.5}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:DungeonStatus.Done}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="{StaticResource Background.Second}" Offset="0.0"/>
                                        <GradientStop Color="{StaticResource Background.First}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <StackPanel Orientation="Vertical" Style="{StaticResource DungeonNotificationFragment.Faction}">
                <DockPanel>
                    <Grid HorizontalAlignment="Left" Style="{StaticResource DungeonNotificationFragment.Grid.DungeonMode}" />
                    <Label Style="{StaticResource DungeonNotificationFragment.Label.DungeonMode}" Content="{Binding TierString}"/>
                    <Grid Height="72">
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" Height="24" Margin="0">
                                <Label Content="{Binding DungeonNumber, IsAsync=True, FallbackValue=0}" ContentStringFormat="{}[{0}]" MinWidth="38" VerticalAlignment="Center" Foreground="{StaticResource Solid.Color.Text.Normal}"/>
                                <Label MinWidth="135" VerticalAlignment="Center" Margin="0 0 5 0" Foreground="{StaticResource Solid.Color.Text.Normal}">
                                    <Label.Content>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                                    <Binding Path="EnterDungeonFirstTime" FallbackValue="00.00.0000 00:00:00" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Label.Content>
                                </Label>
                                <Label Content="{Binding MainMapName, IsAsync=True, FallbackValue=UNKNOWN}" Style="{StaticResource DungeonNotificationFragment.MainMapName}" MinWidth="138" />
                                <Grid Margin="5 0 20 0">
                                    <StackPanel Orientation="Horizontal" MinWidth="210">
                                        <ItemsControl ItemsSource="{Binding DungeonChests, IsAsync=True}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Rows="1"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </StackPanel>
                                </Grid>
                                <Grid ZIndex="5" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-20 0 0 0" ToolTip="{Binding DiedMessage}">
                                    <Image Style="{StaticResource DungeonNotificationFragment.Image.Skull}" />
                                </Grid>
                                <Grid Margin="0,0,0,0" Width="16" Height="16" VerticalAlignment="Center" ToolTip="{Binding TranslationDungeonRunTime, FallbackValue=DUNGEON__RUN__TIME}">
                                    <fa5:ImageAwesome Icon="Regular_Clock" Foreground="{StaticResource SolidColorBrush.Foreground.First}" />
                                </Grid>
                                <Label Content="{Binding RunTimeString, IsAsync=True, FallbackValue=00:00:00}" ContentStringFormat="{}{0}" VerticalAlignment="Center" Margin="3 0 10 0" MinWidth="55">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsBestTime}" Value="true">
                                                    <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}" />
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="1" Color="{StaticResource Color.Gold.2}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBestTime}" Value="false">
                                                    <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Height="24">
                                <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" ToolTip="{Binding TranslationDungeonFame, FallbackValue=DUNGEON__FAME}">
                                    <Image Source="Resources/fame.png" Style="{StaticResource LineFragmentImageStyle}" />
                                </Grid>
                                <Label Content="{Binding Fame, IsAsync=True, FallbackValue=-}" 
                                       ContentStringFormat="{}{0:N0}" Style="{StaticResource DungeonNotificationFragment.BestFame}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Resources/respec.png" Style="{StaticResource LineFragmentImageStyle}" />
                                </Grid>
                                <Label Content="{Binding ReSpec, IsAsync=True, FallbackValue=-}" 
                                   ContentStringFormat="{}{0:N0}" Style="{StaticResource DungeonNotificationFragment.BestReSpec}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Resources/silver.png" Style="{StaticResource LineFragmentImageStyle}" />
                                </Grid>
                                <Label Content="{Binding Silver, IsAsync=True, FallbackValue=-}" 
                                   ContentStringFormat="{}{0:N0}" Style="{StaticResource DungeonNotificationFragment.BestSilver}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding TranslationDungeonFame, FallbackValue=DUNGEON__FAME}">
                                    <Image Source="Resources/fame.png" Style="{StaticResource LineFragmentImageStyle}" />
                                </Grid>
                                <Label Content="{Binding FamePerHour, IsAsync=True, FallbackValue=-}" 
                                   ContentStringFormat="{}{0:N0}/h" Style="{StaticResource DungeonNotificationFragment.BestFamePerHour}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="85" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Resources/respec.png" Style="{StaticResource LineFragmentImageStyle}" />
                                </Grid>
                                <Label Content="{Binding ReSpecPerHour, IsAsync=True, FallbackValue=-}" 
                                   ContentStringFormat="{}{0:N0}/h" Style="{StaticResource DungeonNotificationFragment.BestReSpecPerHour}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="85" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image Source="Resources/silver.png" Style="{StaticResource LineFragmentImageStyle}" />
                                </Grid>
                                <Label Content="{Binding SilverPerHour, IsAsync=True, FallbackValue=-}" 
                                   ContentStringFormat="{}{0:N0}/h" Style="{StaticResource DungeonNotificationFragment.BestSilverPerHour}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="85" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Height="24">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0,2,0" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}">
                                    <Image Style="{StaticResource Tracker.Fraction.Flag.Icon}"/>
                                </Grid>
                                <Label Content="{Binding FactionFlags, IsAsync=True, FallbackValue=-}" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}"
                                       ContentStringFormat="{}{0:N0}" Style="{StaticResource DungeonNotificationFragment.BestFactionFlags}" VerticalAlignment="Center" Margin="0 0 5 0" MinWidth="82" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}">
                                    <Image Style="{StaticResource Tracker.Fraction.Flag.Icon}"/>
                                </Grid>
                                <Label Content="{Binding FactionFlagsPerHour, IsAsync=True, FallbackValue=-}" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}"
                                       ContentStringFormat="{}{0:N0}/h" Style="{StaticResource DungeonNotificationFragment.BestFactionFlagsPerHour}" VerticalAlignment="Center" Margin="0 0 5 0" MinWidth="80" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}">
                                    <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}"/>
                                </Grid>
                                <Label Content="{Binding FactionCoins, IsAsync=True, FallbackValue=-}" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}"
                                       ContentStringFormat="{}{0:N0}" Style="{StaticResource DungeonNotificationFragment.BestFactionCoins}" VerticalAlignment="Center" Margin="0 0 5 0" MinWidth="85" />

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}">
                                    <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}"/>
                                </Grid>
                                <Label Content="{Binding FactionCoinsPerHour, IsAsync=True, FallbackValue=-}" Visibility="{Binding IsFactionWarfareVisible, FallbackValue=Hidden}"
                                       ContentStringFormat="{}{0:N0}/h" Style="{StaticResource DungeonNotificationFragment.BestFactionCoinsPerHour}" VerticalAlignment="Center" Margin="1 0 5 0" MinWidth="205" />

                                <Grid Margin="0,0,0,0" Width="16" Height="16" VerticalAlignment="Center" ToolTip="{Binding TranslationNumberOfDungeonFloors, FallbackValue=NUMBER__OF__DUNGEON__FLOORS}">
                                    <fa5:ImageAwesome Icon="Solid_Dungeon" Foreground="{StaticResource SolidColorBrush.Foreground.First}" />
                                </Grid>
                                <Label Content="{Binding NumberOfDungeonFloors, IsAsync=True, FallbackValue=0}" ContentStringFormat="{}{0}" VerticalAlignment="Center" Margin="2 0 10 0" MinWidth="55" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </DockPanel>
            </StackPanel>
            <Grid Margin="0 0 20 0" Height="30" Width="50" HorizontalAlignment="Right">
                <CheckBox Width="auto" Height="auto" IsChecked="{Binding IsSelectedForDeletion}" ToolTip="{Binding TranslationSelectToDelete}" />
            </Grid>
        </Grid>
    </DataTemplate>

    <Style x:Key="DungeonEventObjectFragment.Image.Chest" TargetType="Image">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.StandardChestClose}">
                <Setter Property="Source" Value="Resources/chest_close_standard.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationStandard}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.StandardChestOpen}">
                <Setter Property="Source" Value="Resources/chest_open_standard.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationStandard}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.UncommonChestClose}">
                <Setter Property="Source" Value="Resources/chest_close_uncommon.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationUncommon}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.UncommonChestOpen}">
                <Setter Property="Source" Value="Resources/chest_open_uncommon.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationUncommon}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.RareChestClose}">
                <Setter Property="Source" Value="Resources/chest_close_rare.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationRare}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.RareChestOpen}">
                <Setter Property="Source" Value="Resources/chest_open_rare.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationRare}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.LegendaryChestClose}">
                <Setter Property="Source" Value="Resources/chest_close_legendary.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationLegendary}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, IsAsync=True}" Value="{x:Static enumerations:ChestStatus.LegendaryChestOpen}">
                <Setter Property="Source" Value="Resources/chest_open_legendary.png" />
                <Setter Property="ToolTip" Value="{Binding TranslationLegendary}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate DataType="{x:Type notification:DungeonEventObjectFragment}">
        <Grid Width="18" Margin="0 0 0 0">
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.CombatShrine}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.SilverShrine}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.FameShrine}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Image>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.CombatShrine}">
                                    <Setter Property="Source" Value="Resources/shrine_combat_buff.png" />
                                    <Setter Property="ToolTip" Value="{Binding TranslationCombatBuff}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.SilverShrine}">
                                    <Setter Property="Source" Value="Resources/shrine_silver.png" />
                                    <Setter Property="ToolTip" Value="{Binding TranslationSilverShrine}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.FameShrine}">
                                    <Setter Property="Source" Value="Resources/shrine_fame.png" />
                                    <Setter Property="ToolTip" Value="{Binding TranslationFameShrine}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>

            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.BookChest}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.Chest}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Image Style="{StaticResource DungeonEventObjectFragment.Image.Chest}"/>
                <Image Margin="0 -12 0 0" Opacity="0.85">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBossChest, IsAsync=True}" Value="true">
                                    <Setter Property="Source" Value="Resources/boss.png"/>
                                    <Setter Property="ToolTip" Value="{Binding TranslationBossChest}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image Margin="0 -12 0 0" Opacity="0.85">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type, IsAsync=True}" Value="{x:Static enumerations:DungeonEventObjectType.BookChest}">
                                    <Setter Property="Source" Value="Resources/book.png"/>
                                    <Setter Property="ToolTip" Value="{Binding TranslationBookChest}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Chest icons -->
    <Style TargetType="Image" x:Key="Icon.Chest.Standard.Close" >
        <Setter Property="Source" Value="Resources/chest_close_standard.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Standard.Open" >
        <Setter Property="Source" Value="Resources/chest_open_standard.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Uncommon.Close" >
        <Setter Property="Source" Value="Resources/chest_close_uncommon.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Uncommon.Open" >
        <Setter Property="Source" Value="Resources/chest_open_uncommon.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Rare.Close" >
        <Setter Property="Source" Value="Resources/chest_close_rare.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Rare.Open" >
        <Setter Property="Source" Value="Resources/chest_open_rare.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Legendary.Close" >
        <Setter Property="Source" Value="Resources/chest_close_legendary.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style TargetType="Image" x:Key="Icon.Chest.Legendary.Open" >
        <Setter Property="Source" Value="Resources/chest_open_legendary.png"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <!-- Dungeon icon -->
    <Style TargetType="Image" x:Key="Icon.Dungeon" >
        <Setter Property="Source" Value="Resources/dungeon.png"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
    </Style>

    <!-- Fame icon -->
    <Style TargetType="Image" x:Key="Icon.Fame" >
        <Setter Property="Source" Value="Resources/fame.png"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <!-- Silver icon -->
    <Style TargetType="Image" x:Key="Icon.Silver" >
        <Setter Property="Source" Value="Resources/silver.png"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <!-- ReSpec icon -->
    <Style TargetType="Image" x:Key="Icon.ReSpec" >
        <Setter Property="Source" Value="Resources/respec.png"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <!-- Tracking Information styles -->
    <Style x:Key="Tracking.Information.Border" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="7"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Background" Value="{StaticResource SolidColorBrush.Background.Second}"></Setter>
    </Style>

    <Style x:Key="Tracking.Information.StackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Width" Value="auto"></Setter>
        <Setter Property="Margin" Value="5 0 5 0"></Setter>
    </Style>

    <Style x:Key="Tracking.Information.Title" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="Height" Value="18"></Setter>
        <Setter Property="Padding" Value="0 3 0 0"></Setter>
    </Style>

    <Style x:Key="Tracking.Information.Value" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Normal}"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
    </Style>

    <DataTemplate DataType="{x:Type models:MainStatObject}">
        <StackPanel Margin="0,0,0,0" Visibility="{Binding Visibility}">
            <DockPanel Margin="0,0,0,0" Height="24" VerticalAlignment="Top">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Visibility}" ToolTip="{Binding TranslationTotalFactionPoints, FallbackValue='TOTAL__FACTION__POINTS'}">
                    <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}"/>
                </Grid>
                <Label Content="{Binding Value, FallbackValue='0'}" Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" Margin="0,-2, 0,0" HorizontalAlignment="Left"></Label>
            </DockPanel>
            <DockPanel Margin="0,0,0,0" Height="24" VerticalAlignment="Top">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Visibility}">
                    <Image Style="{StaticResource Tracker.Fraction.Coin.Icon}"/>
                </Grid>
                <Label Content="{Binding ValuePerHour, FallbackValue='0'}" ContentStringFormat="{}{0} /h"  Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" Margin="0,-2, 0,0" HorizontalAlignment="Left"></Label>
            </DockPanel>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="BarButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Style TargetType="TextBlock" x:Key="ButtonLabel">
                <Setter Property="Text" Value="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type Button}} }" />
            </Style>
        </ControlTemplate.Resources>
        <Grid>
            <!-- Other controls here -->
            <TextBlock Name="LabelText" Style="{StaticResource ButtonLabel}" />
        </Grid>
    </ControlTemplate>

    <!-- ##### Damage meter ##### -->

    <!-- Damage meter icon -->
    <Style TargetType="Image" x:Key="DamageMeter.Icon">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
    </Style>

    <Style TargetType="ProgressBar" x:Key="DamageMeter.ProgressBar.Colors">
        <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.UnknownWeaponType}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding CategoryId}" Value="sword">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Sword}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="spear">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Spear}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="quarterstaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Quarterstaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="naturestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.NatureStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="mace">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Mace}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="holystaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.HolyStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="hammer">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Hammer}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="froststaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.FrostStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="firestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.FireStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="dagger">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Dagger}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="cursestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.CursedStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="crossbow">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Crossbow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="bow">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Bow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="axe">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Axe}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CategoryId}" Value="arcanestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.ArcaneStaff}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Damage meter -->
    <DataTemplate DataType="{x:Type notification:DamageMeterFragment}">
        <Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDamageMeterShowing}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsDamageMeterShowing}" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ProgressBar com:ProgressBarSmoother.SmoothValue="{Binding DamageInPercent}" Minimum="0" Maximum="100" 
                             Height="40" Margin="3,1,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" Style="{StaticResource DamageMeter.ProgressBar.Colors}" />
                <ProgressBar com:ProgressBarSmoother.SmoothValue="{Binding HealInPercent}"
                             Minimum="0" Maximum="100" Height="2" Margin="3,1,2,1" VerticalAlignment="Bottom" Background="#00FFFFFF" BorderThickness="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.HealBar}" />
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <Label Foreground="{StaticResource Weapon.Foreground.Text}" Content="{Binding DamagePercentage}" 
                           ContentStringFormat="{}{0:N2}%" MinWidth="55" Margin="10,3" HorizontalContentAlignment="Right"/>
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,0, 0, 0"/>
                    <Label Foreground="{StaticResource Weapon.Foreground.Text}" Content="{Binding Damage}" MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,3, 5, 0"></Label>
                    <Label Foreground="{StaticResource Weapon.Foreground.Text}" Content="{Binding DpsString}" ContentStringFormat="{}{0:N0}/dps" MinWidth="75" MaxWidth="75" FontWeight="Bold" Margin="10,3, 50, 0"></Label>
                </StackPanel>
            </Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDamageMeterShowing}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsDamageMeterShowing}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ProgressBar com:ProgressBarSmoother.SmoothValue="{Binding HealInPercent}" Minimum="0" Maximum="100" 
                             Height="40" Margin="3,1,2,1" VerticalAlignment="Top" Background="#00FFFFFF" BorderThickness="0" Style="{StaticResource DamageMeter.ProgressBar.Colors}" />
                <StackPanel Orientation="Horizontal">
                    <Grid Margin="10,0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Source="{Binding CauserMainHand.Icon}" Style="{StaticResource DamageMeter.Icon}" />
                    </Grid>
                    <Label Foreground="{StaticResource Weapon.Foreground.Text}" Content="{Binding HealPercentage}" 
                           ContentStringFormat="{}{0:N2}%" MinWidth="55" Margin="10,3" HorizontalContentAlignment="Right"></Label>
                    <Label Content="{Binding Name}" MinWidth="125" MaxWidth="125" Margin="10,0, 0, 0"></Label>
                    <Label Foreground="{StaticResource Weapon.Foreground.Text}" Content="{Binding Heal}" ContentStringFormat="{}{0:N0}" MinWidth="100" MaxWidth="100" FontWeight="Bold" Margin="10,3, 5, 0"></Label>
                    <Label Foreground="{StaticResource Weapon.Foreground.Text}" Content="{Binding HpsString}" ContentStringFormat="{}{0:N0}/hps" MinWidth="75" MaxWidth="75" FontWeight="Bold" Margin="10,3, 50, 0"></Label>
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style TargetType="fa5:ImageAwesome" x:Key="Style.Party.Circle">
        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Foreground.Second}" />
        <Setter Property="Icon" Value="Solid_UserCircle" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="sword">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Sword}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="spear">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Spear}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="quarterstaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Quarterstaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="naturestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.NatureStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="mace">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Mace}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="holystaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.HolyStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="hammer">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Hammer}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="froststaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.FrostStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="firestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.FireStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="dagger">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Dagger}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="cursestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.CursedStaff}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="crossbow">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Crossbow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="bow">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Bow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="axe">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.Axe}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WeaponCategoryId}" Value="arcanestaff">
                <Setter Property="Foreground" Value="{StaticResource Weapon.Foreground.ArcaneStaff}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Name}" Value="Rakaaria">
                <Setter Property="Margin" Value="0,0,0,1" />
                <Setter Property="ToolTip" Value="Rakaaria - Much love for the best girl in the world!" />
                <Setter Property="Icon" Value="Solid_Heart" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="{StaticResource Color.Red.1}" Offset="0.0" />
                            <GradientStop Color="{StaticResource Color.Red.2}" Offset="1.0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.5" Color="{StaticResource Color.Red.3}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Name}" Value="Triky313">
                <Setter Property="Margin" Value="0,0,0,1" />
                <Setter Property="Icon" Value="Solid_Font" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.5" Color="{StaticResource Color.Red.3}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Name}" Value="Rhaegaryn">
                <Setter Property="Margin" Value="0,0,0,1" />
                <Setter Property="ToolTip" Value="Rhaegaryn - Most dedicated contributor!" />
                <Setter Property="Icon" Value="Solid_Star" />
                <Setter Property="Foreground" Value="{StaticResource Solid.Color.Text.Gold}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.5" Color="{StaticResource Color.Gold.2}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate DataType="{x:Type networkModel:DungeonCloseTimer}">
        <Border Visibility="{Binding IsVisible}" Style="{StaticResource Tracking.Information.Border}">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Width="auto" Margin="5 0 5 0">
                <Label Style="{StaticResource Tracking.Information.Title}" Content="{Binding TranslationDungeonTimer, FallbackValue=DUNGEON__TIMER}" />
                <StackPanel Orientation="Horizontal" Width="auto">
                    <Grid>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDungeonClosed}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsDungeonClosed}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <StackPanel ZIndex="2" Orientation="Horizontal">
                                <Label Content="{Binding TimerString, FallbackValue=00:00:00}" />
                            </StackPanel>
                        </Grid>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDungeonClosed}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsDungeonClosed}" Value="False">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Label FontWeight="Bold" Foreground="{StaticResource SolidColorBrush.Green.2}" Content="{Binding TranslationSafe, FallbackValue=SAFE}" />
                        </Grid>
                    </Grid>
                    <Grid ZIndex="2" Height="15" Width="15" Margin="0,0,5,0" VerticalAlignment="Center">
                        <fa5:ImageAwesome Icon="Solid_SyncAlt" Foreground="{StaticResource SolidColorBrush.Foreground.First}" ToolTip="{Binding TranslationResetDungeonTimer}">
                            <fa5:ImageAwesome.InputBindings>
                                <MouseBinding
                                    MouseAction="LeftClick"
                                    Command="{Binding RefreshDungeonTimer}" />
                            </fa5:ImageAwesome.InputBindings>
                        </fa5:ImageAwesome>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type networkModel:PartyMemberCircle}">
        <Grid Height="14" Width="14" Margin="2,4,2,0" VerticalAlignment="Top" ToolTip="{Binding Name}">
            <fa5:ImageAwesome Style="{StaticResource Style.Party.Circle}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type models:DungeonStats}">
        <Border Style="{StaticResource Tracking.Information.Border}">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Width="auto" Margin="5 0 5 0">
                <Label Style="{StaticResource Tracking.Information.Title}" Content="{Binding TranslationTitle, FallbackValue=TOTAL}" FontWeight="Bold"></Label>
                <DockPanel Margin="0,0,0,0" Height="30" VerticalAlignment="Top">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Style="{StaticResource Icon.Dungeon}"/>
                    </Grid>
                    <Label Content="{Binding EnteredDungeon, FallbackValue='0'}" ContentStringFormat="{}{0}" 
                           ToolTip="{Binding TranslationEnteredDungeon}" MinWidth="40" Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" 
                           Margin="0,0, 0,0" HorizontalAlignment="Left"></Label>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Style="{StaticResource Icon.Chest.Standard.Close}"/>
                    </Grid>
                    <Label Content="{Binding OpenedStandardChests, FallbackValue='0'}" ContentStringFormat="{}{0}" 
                           ToolTip="{Binding TranslationOpenedStandardChests}" MinWidth="50" Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" 
                           Margin="0,0, 0,0" HorizontalAlignment="Left"></Label>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Style="{StaticResource Icon.Chest.Uncommon.Close}"/>
                    </Grid>
                    <Label Content="{Binding OpenedUncommonChests, FallbackValue='0'}" ContentStringFormat="{}{0}" 
                           ToolTip="{Binding TranslationOpenedUncommonChests}" MinWidth="50" Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" 
                           Margin="0,0, 0,0" HorizontalAlignment="Left"></Label>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Style="{StaticResource Icon.Chest.Rare.Close}"/>
                    </Grid>
                    <Label Content="{Binding OpenedRareChests, FallbackValue='0'}" ContentStringFormat="{}{0}" 
                           ToolTip="{Binding TranslationOpenedRareChests}" MinWidth="50" Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" 
                           Margin="0,0, 0,0" HorizontalAlignment="Left"></Label>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Style="{StaticResource Icon.Chest.Legendary.Close}"/>
                    </Grid>
                    <Label Content="{Binding OpenedLegendaryChests, FallbackValue='0'}" ContentStringFormat="{}{0}" 
                           ToolTip="{Binding TranslationOpenedLegendaryChests}" MinWidth="50" Width="Auto" Height="auto" FontWeight="Bold" FontSize="12" 
                           Margin="0,0, 0,0" HorizontalAlignment="Left"></Label>
                </DockPanel>
                <DockPanel Margin="0,0,0,0" Height="30" VerticalAlignment="Top">
                    <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" 
                          ToolTip="{Binding TranslationFame, FallbackValue=TOTAL__FAME}">
                        <Image Source="Resources/fame.png" Style="{StaticResource LineFragmentImageStyle}" />
                    </Grid>
                    <Label Content="{Binding Fame, FallbackValue='0'}" ContentStringFormat="{}{0:N0}" 
                           Foreground="{StaticResource SolidColorBrush.Foreground.First}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />
                    <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" 
                          ToolTip="{Binding TranslationReSpec, FallbackValue=TOTAL__RESPEC}">
                        <Image Source="Resources/respec.png" Style="{StaticResource LineFragmentImageStyle}" />
                    </Grid>
                    <Label Content="{Binding ReSpec, FallbackValue='0'}" ContentStringFormat="{}{0:N0}" 
                           Foreground="{StaticResource SolidColorBrush.Foreground.First}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />
                    <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" 
                          ToolTip="{Binding TranslationSilver, FallbackValue=TOTAL__SILVER}">
                        <Image Source="Resources/silver.png" Style="{StaticResource LineFragmentImageStyle}" />
                    </Grid>
                    <Label Content="{Binding Silver, FallbackValue='0'}" ContentStringFormat="{}{0:N0}" 
                           Foreground="{StaticResource SolidColorBrush.Foreground.First}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />
                </DockPanel>
                <DockPanel Margin="0,0,0,0" Height="30" VerticalAlignment="Top">
                    <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" 
                          ToolTip="{Binding TranslationAverageFame, FallbackValue=AVERAGE__FAME}">
                        <Image Source="Resources/fame.png" Style="{StaticResource LineFragmentImageStyle}" />
                    </Grid>
                    <Label Content="{Binding FameAverage, FallbackValue='0'}" ContentStringFormat="{}{0:N0}" 
                           Foreground="{StaticResource SolidColorBrush.Foreground.First}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />
                    <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" 
                          ToolTip="{Binding TranslationAverageReSpec, FallbackValue=AVERAGE__RESPEC}">
                        <Image Source="Resources/respec.png" Style="{StaticResource LineFragmentImageStyle}" />
                    </Grid>
                    <Label Content="{Binding ReSpecAverage, FallbackValue='0'}" ContentStringFormat="{}{0:N0}" 
                           Foreground="{StaticResource SolidColorBrush.Foreground.First}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />
                    <Grid HorizontalAlignment="Center" Margin="5,0,0,0" VerticalAlignment="Center" 
                          ToolTip="{Binding TranslationAverageSilver, FallbackValue=AVERAGE__SILVER}">
                        <Image Source="Resources/silver.png" Style="{StaticResource LineFragmentImageStyle}" />
                    </Grid>
                    <Label Content="{Binding SilverAverage, FallbackValue='0'}" ContentStringFormat="{}{0:N0}" 
                           Foreground="{StaticResource SolidColorBrush.Foreground.First}" VerticalAlignment="Center" Margin="0 0 10 0" MinWidth="75" />
                </DockPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type models:DungeonStatsFilter}">
        <Border Style="{StaticResource Tracking.Information.Border}">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Width="auto" Margin="5 0 5 0">
                <Label Style="{StaticResource Tracking.Information.Title}" Content="{Binding TranslationFilter, FallbackValue=FILTER}" FontWeight="Bold"></Label>
                <DockPanel Margin="0,0,0,0" Height="30" VerticalAlignment="Top">
                    <CheckBox Content="{Binding TranslationSolo}" ToolTip="{Binding TranslationSoloDungeon}"
                              Margin="5,0,5,0" IsChecked="{Binding SoloCheckbox}"></CheckBox>
                    <CheckBox Content="{Binding TranslationStandard}" ToolTip="{Binding TranslationStandardDungeon}"
                              Margin="5,0,5,0" IsChecked="{Binding StandardCheckbox}"></CheckBox>
                    <CheckBox Content="{Binding TranslationAva}" ToolTip="{Binding TranslationAvalonianDungeon}"
                              Margin="5,0,5,0" IsChecked="{Binding AvaCheckbox}"></CheckBox>
                    <CheckBox Content="{Binding TranslationHg}" ToolTip="{Binding TranslationHellGate}"
                              Margin="5,0,5,0" IsChecked="{Binding HgCheckbox}"></CheckBox>
                    <CheckBox Content="{Binding TranslationCorrupted}" ToolTip="{Binding TranslationCorruptedDungeon}"
                              Margin="5,0,5,0" IsChecked="{Binding CorruptedCheckbox}"></CheckBox>
                    <CheckBox Content="{Binding TranslationExped}" ToolTip="{Binding TranslationExpedition}"
                              Margin="5,0,5,0" IsChecked="{Binding ExpeditionCheckbox}"></CheckBox>
                    <CheckBox Content="{Binding TranslationUnknown}" 
                              Margin="5,0,5,0" IsChecked="{Binding UnknownCheckbox}"></CheckBox>
                </DockPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- ClusterInfo -->
    <DataTemplate DataType="{x:Type models:ClusterInfo}">
        <Grid>
            <Grid Margin="0,0,0,2">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ClusterType}" Value="{x:Static enumerations:ClusterType.SafeArea}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                            <GradientStop Color="{StaticResource Cluster.SafeArea}" Offset="0.0" />
                                            <GradientStop Color="{StaticResource Background.First}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClusterType}" Value="{x:Static enumerations:ClusterType.Yellow}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                            <GradientStop Color="{StaticResource Cluster.Yellow}" Offset="0.0" />
                                            <GradientStop Color="{StaticResource Background.First}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClusterType}" Value="{x:Static enumerations:ClusterType.Red}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                            <GradientStop Color="{StaticResource Cluster.Red}" Offset="0.0" />
                                            <GradientStop Color="{StaticResource Background.First}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClusterType}" Value="{x:Static enumerations:ClusterType.Black}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                            <GradientStop Color="{StaticResource Cluster.Black}" Offset="0.0" />
                                            <GradientStop Color="{StaticResource Background.First}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClusterType}" Value="{x:Static enumerations:ClusterType.AvalonTunnel}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                            <GradientStop Color="{StaticResource Cluster.Avalon}" Offset="0.0" />
                                            <GradientStop Color="{StaticResource Background.First}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClusterType}" Value="{x:Static enumerations:ClusterType.Unknown}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.9,0">
                                            <GradientStop Color="{StaticResource Cluster.Black}" Offset="0.0" />
                                            <GradientStop Color="{StaticResource Background.First}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <StackPanel Orientation="Horizontal">
                    <Label MinWidth="135" VerticalAlignment="Center" FontSize="12" Margin="0 0 5 0" Foreground="{StaticResource Weapon.Foreground.Text}">
                        <Label.Content>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}" ConverterCulture="{x:Static com:LanguageController.CurrentCultureInfo}">
                                        <Binding Path="Entered" FallbackValue="00.00.0000 00:00:00" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Label.Content>
                    </Label>
                    <Label Content="{Binding TierString}" FontSize="12" Foreground="{StaticResource Weapon.Foreground.Text}" MinWidth="30" MaxWidth="30" Margin="10,0, 0, 0" />
                    <Label Content="{Binding UniqueName}" FontSize="12" Foreground="{StaticResource Weapon.Foreground.Text}" MinWidth="150" MaxWidth="200" Margin="10,0, 0, 0" />
                    <Label Content="{Binding  AvalonTunnelType}" FontSize="12" Foreground="{StaticResource Weapon.Foreground.Text}" MinWidth="150" MaxWidth="200" Margin="10,0, 0, 0">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AvalonTunnelType}" Value="{x:Static enumerations:AvalonTunnelType.Unknown}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Setter Property="Width" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style TargetType="ItemsControl" x:Key="PartyMember.ItemsControl">
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>